{"id":"RobotBrowserTemplate","robotType":"ROBOT","mainClass":"com.novayre.jidoka.robot.test.RobotBrowserTemplate","actions":["start","openBrowser","uploadAttachmentsToAppian","navigateToWeb","entercredentials","searchdocument","selectdocument","closeBrowser","end"],"conditionalActions":["checkdocuments"],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n\t * Action \"start\"\n\t * @throws Exception\n\t */\npublic void start() throws Exception {\n    server = (IJidokaServer<?>) JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n}"},{"id":"openBrowser","implementation":"/**\n\t * Open Web Browser\n\t * @throws Exception\n\t */\npublic void openBrowser() throws Exception {\n    browser = IWebBrowserSupport.getInstance(this, client);\n    browserType = server.getParameters().get(\"Browser\");\n    // Select browser type\n    if (StringUtils.isBlank(browserType)) {\n        server.info(\"Browser parameter not present. Using the default browser CHROME\");\n        browser.setBrowserType(EBrowsers.CHROME);\n        browserType = EBrowsers.CHROME.name();\n    } else {\n        EBrowsers selectedBrowser = EBrowsers.valueOf(browserType);\n        browser.setBrowserType(selectedBrowser);\n        server.info(\"Browser selected: \" + selectedBrowser.name());\n    }\n    // Set timeout to 60 seconds\n    browser.setTimeoutSeconds(60);\n    // Init the browser module\n    browser.initBrowser();\n    server.setNumberOfItems(1);\n}"},{"id":"uploadAttachmentsToAppian","implementation":"/** Method to get file from local path\n\t */\npublic void uploadAttachmentsToAppian() throws Exception {\n    String DocumentPath = server.getEnvironmentVariables().get(\"DocumentPath\").toString();\n    File attachmentsDir = new  File(DocumentPath);\n    server.debug(\"Looking for files in: \" + attachmentsDir.getAbsolutePath());\n    File[] filesToUpload = Objects.requireNonNull(attachmentsDir.listFiles());\n    server.setNumberOfItems(filesToUpload.length);\n    String document = server.getParameters().get(\"GoogleDocName\").toString();\n    String filename = attachmentsDir.getAbsolutePath() + \"\\\\\" + document + \".docx\";\n    File fileUpload = new  File(filename);\n    String output = uploadFile(fileUpload);\n    Map<String, IRobotVariable> variables = server.getWorkflowVariables();\n    IRobotVariable rv = variables.get(\"uploadDocId\");\n    rv.setValue(output);\n}"},{"id":"navigateToWeb","implementation":"public void navigateToWeb() throws Exception {\n    server.setCurrentItem(1, HOME_URL);\n    browser.navigate(HOME_URL);\n    browser.waitElement(By.cssSelector(Googledoc.CssSelector.GOOGLE_USERNAME), 200);\n    if (browserType.equals(\"IE\")) {\n        client.clickOnCenter();\n        client.pause(3000);\n    }\n    server.sendScreen(\"Screen after load page: \" + HOME_URL);\n}"},{"id":"entercredentials","implementation":"public void entercredentials() throws Exception {\n    IUsernamePassword appianCredentials = server.getCredentials(\"GoogleDocs\").get(0);\n    server.info(\"Login Username: \" + appianCredentials.getUsername());\n    browser.waitElement(By.cssSelector(Googledoc.CssSelector.GOOGLE_USERNAME), 50);\n    browser.textFieldSet(By.cssSelector(Googledoc.CssSelector.GOOGLE_USERNAME), appianCredentials.getUsername(), true);\n    browser.clickOnElement(By.cssSelector(Googledoc.CssSelector.GOOGLE_NEXT));\n    TimeUnit.SECONDS.sleep(7);\n    browser.waitElement(By.cssSelector(Googledoc.CssSelector.GOOGLE_PASSWORD), 60);\n    browser.textFieldSet(By.cssSelector(Googledoc.CssSelector.GOOGLE_PASSWORD), appianCredentials.getPassword(), true);\n    browser.clickOnElement(By.cssSelector(Googledoc.CssSelector.GOOGLE_NEXT));\n    try {\n        browser.waitElement(By.xpath(Googledoc.CssSelector.GOOGLE_RECOVER), 10);\n        browser.clickOnElement(By.xpath(Googledoc.CssSelector.GOOGLE_RECOVER));\n        TimeUnit.SECONDS.sleep(10);\n        browser.textFieldSet(By.cssSelector(Googledoc.CssSelector.GOOGLE_PHONE), \"7708696608\", true);\n        TimeUnit.SECONDS.sleep(5);\n        browser.clickOnElement(By.cssSelector(Googledoc.CssSelector.GOOGLE_NEXT));\n    } catch (Exception e) {\n        browser.waitElement(By.xpath(Googledoc.CssSelector.GOOGLE_SEARCH), 20);\n        server.info(\"Login Successful\");\n    }\n}"},{"id":"searchdocument","implementation":"public void searchdocument() throws Exception {\n    String document = server.getParameters().get(\"GoogleDocName\").toString();\n    server.info(\"Document name\" + document);\n    browser.waitElement(By.xpath(Googledoc.CssSelector.GOOGLE_SEARCH), 40);\n    browser.textFieldSet(By.xpath(Googledoc.CssSelector.GOOGLE_SEARCH), document, true);\n    WebElement search = browser.waitElement(By.xpath(Googledoc.CssSelector.GOOGLE_SEARCH), 20);\n    search.sendKeys(Keys.ENTER);\n}"},{"id":"selectdocument","implementation":"public void selectdocument() throws Exception {\n    String //*[@title='\" + server.getParameters().get(\"GoogleDocName\").toString() + \"']\";\n    document = //*[@title='\" + server.getParameters().get(\"GoogleDocName\").toString() + \"']\";\n    \"//*[@title='\" + server.getParameters().get(\"GoogleDocName\").toString() + \"']\";\n    server.info(\"Document Name to find \" + document);\n    WebElement resultsDiv = browser.waitElement(By.xpath(document), 20);\n    try {\n        browser.clickOnElement(By.xpath(document));\n        browser.waitElement(By.cssSelector(Googledoc.CssSelector.GOOGLE_DOC_TITLE), 20);\n        WebElement search = browser.waitElement(By.xpath(Googledoc.CssSelector.GOOGLE_FILE), 20);\n        browser.clickOnElement(By.xpath(Googledoc.CssSelector.GOOGLE_FILE));\n        TimeUnit.SECONDS.sleep(5);\n        browser.clickOnElement(By.xpath(Googledoc.CssSelector.GOOGLE_DOWNLOAD));\n        TimeUnit.SECONDS.sleep(5);\n        browser.clickOnElement(By.xpath(Googledoc.CssSelector.GOOGLE_WORD));\n        TimeUnit.SECONDS.sleep(5);\n    } catch (Exception e) {\n        server.info(\"not found\");\n    }\n}"},{"id":"closeBrowser","implementation":"/**\n\t * Close Browser\n\t * @throws Exception\n\t */\npublic void closeBrowser() throws Exception {\n    browser.getDriver().close();\n    server.setCurrentItemResultToOK(\"Success\");\n}"},{"id":"end","implementation":"/**\n\t * Action \"end\"\n\t * @throws Exception\n\t */\npublic void end() throws Exception {\n}"}],"conditionalActionDetails":[{"id":"checkdocuments","implementation":"public boolean checkdocuments() throws Exception {\n    WebElement empty = browser.waitElement(By.xpath(Googledoc.CssSelector.GOOGLE_SEARCH), 20);\n    if (empty.isDisplayed()) {\n        server.info(\"No documents\");\n        return false;\n    } else {\n        server.info(\"found\");\n        return true;\n    }\n}"}],"sdkMethods":[]}